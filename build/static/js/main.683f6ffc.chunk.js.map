{"version":3,"sources":["temp/todo.func.js","temp/todo.js","index.js"],"names":["TodoFunc","props","add_task","inputchange","arrVal","search","deletebutt","editbutt","index","extraAr","updatebutt","inputupdate","sametaskerr","checked","inputVal","checkbox","completedArr","completeextraArr","checkboxincom","indexcom","inputupdatecom","editbuttCom","updatebuttCom","deletebuttCom","searchCom","checkedCom","renderArr","map","val","idx","className","onChange","e","target","indexOf","type","placeholder","onClick","renderCom","valu","console","log","value","Todo","changeHandler","setState","submitClick","state","extraArr","includes","searchHandler","searchArr","filter","user","editbutton","idxval","updatedInp","updatebutton","arr1","slice","arr2","call","updatedInpCom","this","Fragment","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.683f6ffc.chunk.js","sourcesContent":["import \"./todo.css\";\r\n\r\n\r\nconst TodoFunc = (props) => {\r\n  const {\r\n    add_task,\r\n    inputchange,\r\n    arrVal,\r\n    search,\r\n    deletebutt,\r\n    editbutt,\r\n    index,\r\n    extraAr,\r\n    updatebutt,\r\n    inputupdate,\r\n    sametaskerr,\r\n    checked,\r\n    inputVal,\r\n    checkbox,\r\n    completedArr,\r\n    completeextraArr,\r\n    checkboxincom,\r\n    indexcom,\r\n    inputupdatecom,\r\n    editbuttCom,\r\n    updatebuttCom,\r\n    deletebuttCom,\r\n    searchCom,\r\n    checkedCom\r\n  } = props;\r\n\r\n  const renderArr = arrVal.map((val, idx) => {\r\n    \r\n    return (\r\n      <div key={extraAr.indexOf(val)} className=\"TodoData\">\r\n        <div>\r\n          {\r\n            <input\r\n            checked={checked}\r\n              onChange={(e) => checkbox(e.target.checked,extraAr.indexOf(val))}\r\n              className=\"check\"\r\n              type=\"checkbox\"\r\n            />\r\n          }\r\n        </div>\r\n        <div>\r\n          {index !== extraAr.indexOf(val) ? (\r\n            <li className=\"todoitems\">{val}</li>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div>\r\n          {index === extraAr.indexOf(val) ? (\r\n            <input\r\n              className=\"todoupdateinput\"\r\n              placeholder=\"Update Task\"\r\n              onChange={inputupdate}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"todogroup\">\r\n          {index !== extraAr.indexOf(val) ? (\r\n            <button\r\n              className=\"todoeditbutt\"\r\n              onClick={() => editbutt(extraAr.indexOf(val))}\r\n            >\r\n              Edit\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {index === extraAr.indexOf(val) ? (\r\n            <button\r\n              className=\"todoupdatebutt\"\r\n              onClick={() => updatebutt(extraAr.indexOf(val))}\r\n            >\r\n              Update\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <button\r\n            className=\"tododeletebutt\"\r\n            onClick={() => deletebutt(extraAr.indexOf(val))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const renderCom = completedArr.map((valu, idx) => {\r\n    console.log(completeextraArr.indexOf(valu), indexcom);\r\n    return (\r\n      <div key={completeextraArr.indexOf(valu)} className=\"TodoData2\">\r\n        <div>\r\n          {\r\n            <input\r\n            checked={checkedCom}\r\n              onChange={(e) => checkboxincom(e.target.checked,completeextraArr.indexOf(valu))}\r\n              className=\"check\"\r\n              type=\"checkbox\"\r\n            />\r\n          }\r\n        </div>\r\n        \r\n        <div>\r\n          {indexcom !== completeextraArr.indexOf(valu) ? (\r\n            <li className=\"todoitems\"><del  className=\"strike\"> {valu}</del></li>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div>\r\n          {indexcom === completeextraArr.indexOf(valu) ? (\r\n            <input\r\n              className=\"todoupdateinput\"\r\n              placeholder=\"Update Task\"\r\n              onChange={inputupdatecom}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"todogroup\">\r\n          {indexcom !== completeextraArr.indexOf(valu) ? (\r\n            <button\r\n              className=\"todoeditbutt\"\r\n              onClick={() => editbuttCom(completeextraArr.indexOf(valu))}\r\n            >\r\n              Edit\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {indexcom === completeextraArr.indexOf(valu) ? (\r\n            <button\r\n              className=\"todoupdatebutt\"\r\n              onClick={() => updatebuttCom(completeextraArr.indexOf(valu))}\r\n            >\r\n              Update\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <button\r\n            className=\"tododeletebutt\"\r\n            onClick={() => deletebuttCom(completeextraArr.indexOf(valu))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"maintododiv\">\r\n      <div className=\"todo\">\r\n        <h1 className=\"title\">ToDo List</h1>\r\n        <hr className=\"hrline\" />\r\n        <input\r\n          className=\"todoSearch \"\r\n          placeholder=\"Search Task's\"\r\n          onChange={search}\r\n        />\r\n\r\n        <div className=\"alltodosgrp\">{renderArr}</div>\r\n\r\n        <div className=\"taskadd\">\r\n          <input\r\n            className=\"todoaddInput\"\r\n            placeholder=\"Create New Task\"\r\n            value={inputVal}\r\n            onChange={inputchange}\r\n          />\r\n          <small className=\"taskerror\">{sametaskerr}</small>\r\n          <span onClick={add_task} className=\"material-icons todoaddButt\">\r\n            add_task\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {/* ------------------------------------------------------- */}\r\n      <div className=\"todo2\">\r\n        <h1 className=\"title\">Already Done</h1>\r\n        <hr className=\"hrline\" />\r\n        <input\r\n          className=\"todoSearch \"\r\n          placeholder=\"Search Task's\"\r\n          onChange={searchCom}\r\n        />\r\n\r\n        <div className=\"alltodosgrp\">{renderCom}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoFunc;\r\n","import React, { useCallback } from \"react\";\r\nimport TodoFunc from \"./todo.func\";\r\n\r\nclass Todo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      inputVal: \"\",\r\n      extraArr: [],\r\n      search: [],\r\n      index: \"\",\r\n      updatedInp: \"\",\r\n      sametaskerr: \"\",\r\n      checked:false,\r\n      // -------------------------------------\r\n      completedArr: [],\r\n      completeextraArr: [],\r\n      updatedInpCom: \"\",\r\n      checkedCom:false\r\n    };\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      inputVal: e.target.value,\r\n    });\r\n  };\r\n\r\n  submitClick = () => {\r\n    if (!this.state.extraArr.includes(this.state.inputVal)) {\r\n      this.setState({\r\n        ...this.state,\r\n        extraArr: [...this.state.extraArr, this.state.inputVal],\r\n        search: [...this.state.search, this.state.inputVal],\r\n        sametaskerr: \"\",\r\n        inputVal: \"\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        sametaskerr: \"Same Task present in the list\",\r\n      });\r\n    }\r\n  };\r\n\r\n  searchHandler = (e) => {\r\n    const searchArr = this.state.search.filter((user, idx) => {\r\n      return user.includes(e.target.value);\r\n    });\r\n    if (e.target.value) {\r\n      this.setState({\r\n        ...this.state,\r\n        search: searchArr,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        search: this.state.extraArr,\r\n      });\r\n    }\r\n  };\r\n\r\n  editbutton = (idx) => {\r\n    this.setState({\r\n      ...this.state,\r\n      index: idx,\r\n    });\r\n  };\r\n\r\n  deletebutt = (idx) => {\r\n    const idxval = this.state.extraArr.filter((user) => {\r\n      return user !== this.state.extraArr[idx];\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      extraArr: idxval,\r\n      search: idxval,\r\n    });\r\n  };\r\n\r\n  inputupdate = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      updatedInp: e.target.value,\r\n    });\r\n  };\r\n\r\n  updatebutton = (idx) => {\r\n    const arr1 = this.state.extraArr.slice(0, idx);\r\n    const arr2 = this.state.extraArr.slice(idx + 1);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      index: \"\",\r\n      extraArr: [...arr1, this.state.updatedInp, ...arr2],\r\n      search: [...arr1, this.state.updatedInp, ...arr2],\r\n    });\r\n  };\r\n\r\n  checkbox = (e,idx) => {\r\n    \r\n    if (e===true){\r\n\r\n    \r\n    const idxval = this.state.extraArr.filter((user) => {\r\n      return user !== this.state.extraArr[idx];\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      completedArr: [...this.state.completedArr, this.state.extraArr[idx]],\r\n      completeextraArr: [\r\n        ...this.state.completeextraArr,\r\n        this.state.extraArr[idx],\r\n      ],\r\n      extraArr: idxval,\r\n      search: idxval,\r\n      checked:false\r\n      \r\n    });\r\n  }\r\n    // this.call()\r\n  };\r\n\r\n\r\n  call=()=>{\r\n    this.setState({\r\n      ...this.state,\r\n      checked:false\r\n    })\r\n\r\n  }\r\n\r\n  // ---------------------------------------------------\r\n  checkboxincom = (e,idx) => {\r\n    if (e===true){\r\n    const idxval = this.state.completeextraArr.filter((user) => {\r\n      return user !== this.state.completeextraArr[idx];\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      extraArr: [...this.state.extraArr, this.state.completeextraArr[idx]],\r\n      search: [...this.state.search, this.state.completeextraArr[idx]],\r\n      completedArr: idxval,\r\n      completeextraArr: idxval,\r\n      checkedCom:false\r\n    });\r\n  };\r\n}\r\n\r\n  inputupdatecom = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      updatedInpCom: e.target.value,\r\n    });\r\n  };\r\n\r\n  editbuttCom = (idx) => {\r\n    this.setState({\r\n      ...this.state,\r\n      indexcom: idx,\r\n    });\r\n  };\r\n\r\n  updatebuttCom = (idx) => {\r\n    const arr1 = this.state.completeextraArr.slice(0, idx);\r\n    const arr2 = this.state.completeextraArr.slice(idx + 1);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      indexcom: \"\",\r\n      completeextraArr: [...arr1, this.state.updatedInpCom, ...arr2],\r\n      completedArr: [...arr1, this.state.updatedInpCom, ...arr2],\r\n    });\r\n  };\r\n\r\n  deletebuttCom = (idx) => {\r\n    const idxval = this.state.completeextraArr.filter((user) => {\r\n      return user !== this.state.completeextraArr[idx];\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      completeextraArr: idxval,\r\n      completedArr: idxval,\r\n    });\r\n  };\r\n\r\n  searchCom = (e) => {\r\n    const searchArr = this.state.completedArr.filter((user, idx) => {\r\n      return user.includes(e.target.value);\r\n    });\r\n    if (e.target.value) {\r\n      this.setState({\r\n        ...this.state,\r\n        completedArr: searchArr,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        completedArr: this.state.completeextraArr,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <React.Fragment>\r\n        <TodoFunc\r\n          inputchange={this.changeHandler}\r\n          add_task={this.submitClick}\r\n          arrVal={this.state.search}\r\n          search={this.searchHandler}\r\n          editbutt={this.editbutton}\r\n          deletebutt={this.deletebutt}\r\n          extraAr={this.state.extraArr}\r\n          index={this.state.index}\r\n          updatebutt={this.updatebutton}\r\n          inputupdate={this.inputupdate}\r\n          sametaskerr={this.state.sametaskerr}\r\n          inputVal={this.state.inputVal}\r\n          checkbox={this.checkbox}\r\n          checked={this.state.checked}\r\n          // ------------------------------------------\r\n          completedArr={this.state.completedArr}\r\n          completeextraArr={this.state.completeextraArr}\r\n          checkboxincom={this.checkboxincom}\r\n          indexcom={this.state.indexcom}\r\n          inputupdatecom={this.inputupdatecom}\r\n          editbuttCom={this.editbuttCom}\r\n          updatebuttCom={this.updatebuttCom}\r\n          deletebuttCom={this.deletebuttCom}\r\n          searchCom={this.searchCom}\r\n          checkedCom={this.state.checkedCom}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routing from './temp/todo';\r\nReactDOM.render(<Routing/>,document.getElementById('root'));"],"sourceRoot":""}